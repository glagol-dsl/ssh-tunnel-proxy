version: 2
jobs:
  build:
    docker:
      - image: alpine:3.7
    working_directory: ~/project
    steps:
      - run: apk add --no-cache curl git tar gzip
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.11.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Push Docker images
          command: |
            TAG="dev-master"
            if [[ ! -z ${CIRCLE_TAG} ]]; then TAG=${CIRCLE_TAG}; fi
            docker build -t glagol/ssh-tunnel-proxy:${TAG} -t glagol/ssh-tunnel-proxy:latest .
            docker login -u ${DOCKER_ID} -p ${DOCKER_SECRET}
            docker push glagol/ssh-tunnel-proxy:${TAG}
            if [[ ! -z ${CIRCLE_TAG} ]]; then \
              TAG=${TAG:0:3}; \
              docker build -t glagol/ssh-tunnel-proxy:${TAG} .docker/ ; \
              docker push glagol/ssh-tunnel-proxy:${TAG}; \
              docker push glagol/ssh-tunnel-proxy:latest; \
            fi
  deploy-gkp:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/repo
    steps:
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Set Google Cloud Platform Access
          command: |
            gcloud --quiet components install kubectl
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - checkout
      - run:
          name: Create Kubernetes Deployment
          command: kubectl apply -f deploy.yml --record
      - run:
          name: Create Kubernetes Service
          command: kubectl apply -f service.yml
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /^ignore-.*/
      - deploy-gkp:
          filters:
            tags:
              ignore: /^ignore-.*/
          requires:
            - build